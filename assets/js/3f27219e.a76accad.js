"use strict";(self.webpackChunkdcmvn_cursor_bim_docs=self.webpackChunkdcmvn_cursor_bim_docs||[]).push([[852],{1024:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"hands-on/revit-plugins","title":"pyRevit Development with Cursor AI","description":"Real-world pyRevit development exercises with Cursor AI - each group works on the same minimal Revit Python tool with coding issues or missing documentation.","source":"@site/docs/hands-on/revit-plugins.md","sourceDirName":"hands-on","slug":"/hands-on/revit-plugins","permalink":"/pyDCMvnDocs/docs/hands-on/revit-plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/diggtvu/pyDCMvnDocs/tree/main/docs/hands-on/revit-plugins.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var s=i(4848),t=i(8453);const l={sidebar_position:1},o="pyRevit Development with Cursor AI",a={},c=[{value:"Task A: Tab-Autocomplete Scaffolding",id:"task-a-tab-autocomplete-scaffolding",level:2},{value:"Starting Code - Incomplete pyRevit Tool",id:"starting-code---incomplete-pyrevit-tool",level:3},{value:"Your Mission",id:"your-mission",level:3},{value:"Expected Result",id:"expected-result",level:3},{value:"Task B: Natural Language Refactoring",id:"task-b-natural-language-refactoring",level:2},{value:"Starting Code - Needs Improvement",id:"starting-code---needs-improvement",level:3},{value:"Your Mission - Use Ctrl+K Natural Language Edits",id:"your-mission---use-ctrlk-natural-language-edits",level:3},{value:"Expected Improvements",id:"expected-improvements",level:3},{value:"Task C: Modern Rules System Implementation",id:"task-c-modern-rules-system-implementation",level:2},{value:"Create Modern .cursor/rules/ Directory",id:"create-modern-cursorrules-directory",level:3},{value:"Example: dcmvn-framework.mdc",id:"example-dcmvn-frameworkmdc",level:3},{value:"Example: pyrevit-templates.py",id:"example-pyrevit-templatespy",level:3},{value:"Your Mission",id:"your-mission-1",level:3},{value:"Task D: Agent Chat Documentation",id:"task-d-agent-chat-documentation",level:2},{value:"Your Mission - Use Ctrl+I Agent Chat",id:"your-mission---use-ctrli-agent-chat",level:3},{value:"Expected Results",id:"expected-results",level:3},{value:"MEP Systems Analysis",id:"mep-systems-analysis",level:2},{value:"Efficient Cursor Prompt",id:"efficient-cursor-prompt",level:3},{value:"Family Parameter Automation",id:"family-parameter-automation",level:2},{value:"Efficient Cursor Prompt",id:"efficient-cursor-prompt-1",level:3},{value:"Custom Ribbon Integration",id:"custom-ribbon-integration",level:2},{value:"Efficient Cursor Prompt",id:"efficient-cursor-prompt-2",level:3},{value:"Real-World Project Applications",id:"real-world-project-applications",level:2},{value:"Konzerthaus M\xfcnchen (74,000 m\xb2)",id:"konzerthaus-m\xfcnchen-74000-m",level:3},{value:"\xdcberseequartier Residential (419,000 m\xb2)",id:"\xfcberseequartier-residential-419000-m",level:3},{value:"Advanced Plugin Patterns",id:"advanced-plugin-patterns",level:2},{value:"Model Validation Suite",id:"model-validation-suite",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"Cursor AI Best Practices",id:"cursor-ai-best-practices",level:2},{value:"Prompt Engineering Tips",id:"prompt-engineering-tips",level:3},{value:"DCMvn Development Standards",id:"dcmvn-development-standards",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Large Model Handling",id:"large-model-handling",level:3},{value:"Common Issues &amp; Solutions",id:"common-issues--solutions",level:2},{value:"Transaction Management",id:"transaction-management",level:3},{value:"Parameter Access",id:"parameter-access",level:3},{value:"Performance Bottlenecks",id:"performance-bottlenecks",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pyrevit-development-with-cursor-ai",children:"pyRevit Development with Cursor AI"})}),"\n",(0,s.jsx)(n.p,{children:"Real-world pyRevit development exercises with Cursor AI - each group works on the same minimal Revit Python tool with coding issues or missing documentation."}),"\n",(0,s.jsx)(n.h2,{id:"task-a-tab-autocomplete-scaffolding",children:"Task A: Tab-Autocomplete Scaffolding"}),"\n",(0,s.jsx)(n.h3,{id:"starting-code---incomplete-pyrevit-tool",children:"Starting Code - Incomplete pyRevit Tool"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Incomplete room data exporter - missing key functions\nfrom pyrevit import forms, revit, DB\n\n__title__ = "Room Data Exporter"\n__author__ = "Workshop Participant"\n\n# TODO: Add function to collect room data\n# TODO: Add function to export to Excel\n# TODO: Add error handling\n\nif __name__ == \'__main__\':\n    # TODO: Implement main execution\n    pass\n'})}),"\n",(0,s.jsx)(n.h3,{id:"your-mission",children:"Your Mission"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"Tab completion"})," to scaffold these missing functions:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Type ",(0,s.jsx)(n.code,{children:"def collect_room_data"})," + ",(0,s.jsx)(n.strong,{children:"Tab"})," - let Cursor generate the complete function"]}),"\n",(0,s.jsxs)(n.li,{children:["Type ",(0,s.jsx)(n.code,{children:"def export_to_excel"})," + ",(0,s.jsx)(n.strong,{children:"Tab"})," - let Cursor create Excel export logic"]}),"\n",(0,s.jsxs)(n.li,{children:["Type ",(0,s.jsx)(n.code,{children:"def main"})," + ",(0,s.jsx)(n.strong,{children:"Tab"})," - let Cursor build the main execution flow"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"expected-result",children:"Expected Result"}),"\n",(0,s.jsx)(n.p,{children:"Cursor should generate complete functions with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Proper pyRevit imports and patterns"}),"\n",(0,s.jsx)(n.li,{children:"Revit API FilteredElementCollector usage"}),"\n",(0,s.jsx)(n.li,{children:"Error handling with pyRevit forms"}),"\n",(0,s.jsx)(n.li,{children:"Excel export functionality"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Success Criteria",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All functions are properly scaffolded"}),"\n",(0,s.jsx)(n.li,{children:"Code follows pyRevit conventions"}),"\n",(0,s.jsx)(n.li,{children:"No syntax errors remain"}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"task-b-natural-language-refactoring",children:"Task B: Natural Language Refactoring"}),"\n",(0,s.jsx)(n.h3,{id:"starting-code---needs-improvement",children:"Starting Code - Needs Improvement"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Poor code that needs refactoring\ndef process_walls():\n    walls = DB.FilteredElementCollector(revit.doc).OfCategory(DB.BuiltInCategory.OST_Walls).ToElements()\n    for wall in walls:\n        print(wall.Name)\n        print(wall.get_Parameter(DB.BuiltInParameter.HOST_AREA_COMPUTED).AsDouble())\n"})}),"\n",(0,s.jsx)(n.h3,{id:"your-mission---use-ctrlk-natural-language-edits",children:"Your Mission - Use Ctrl+K Natural Language Edits"}),"\n",(0,s.jsx)(n.p,{children:"Try these refactoring prompts:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:'"Add proper error handling and parameter validation"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:'"Convert to use pyRevit forms for output instead of print"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:'"Add docstring and improve variable naming"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:'"Filter walls by type and add progress indication"'})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"expected-improvements",children:"Expected Improvements"}),"\n",(0,s.jsx)(n.p,{children:"Cursor should transform the code to include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Try-catch error handling"}),"\n",(0,s.jsx)(n.li,{children:"pyRevit forms for user interaction"}),"\n",(0,s.jsx)(n.li,{children:"Meaningful variable names"}),"\n",(0,s.jsx)(n.li,{children:"Proper documentation"}),"\n",(0,s.jsx)(n.li,{children:"Parameter validation"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Practice Prompts",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Make this code more robust for production use"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Add user selection for wall types"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Include area calculations in square meters"'})}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"task-c-modern-rules-system-implementation",children:"Task C: Modern Rules System Implementation"}),"\n",(0,s.jsx)(n.h3,{id:"create-modern-cursorrules-directory",children:"Create Modern .cursor/rules/ Directory"}),"\n",(0,s.jsx)(n.p,{children:"Modern Cursor uses a structured rules directory instead of a single file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:".cursor/\n\u2514\u2500\u2500 rules/\n    \u251c\u2500\u2500 dcmvn-framework.mdc      # Main framework rules\n    \u251c\u2500\u2500 pyrevit-templates.py     # Code templates  \n    \u2514\u2500\u2500 project-standards.mdc   # Project-specific standards\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-dcmvn-frameworkmdc",children:"Example: dcmvn-framework.mdc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'---\ndescription: DCMvn framework patterns for pyRevit development\nalwaysApply: true\n---\n## Core Framework Integration\n- **Primary imports**: `from DCMvn.core import DB, HOST_APP, get_output`\n- **Framework utilities**: `from DCMvn.core.framework import System, Debug`\n- **User notifications**: `from DCMvn.forms import alert`\n- **CLR setup**: Always add `clr.AddReference("System.Core")`\n\n## Code Standards\n- All functions must have docstrings\n- Use `alert()` instead of print statements\n- Always validate parameters before use\n- Include error handling for all Revit API calls\n\n## Naming Conventions  \n- Use snake_case for function names\n- Use descriptive variable names (selected_walls not walls)\n- Prefix private functions with underscore\n'})}),"\n",(0,s.jsx)(n.h3,{id:"example-pyrevit-templatespy",children:"Example: pyrevit-templates.py"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# coding: utf-8\nimport clr\nfrom DCMvn.core import DB, HOST_APP, get_output\nfrom DCMvn.core.framework import System, Debug\nfrom DCMvn.forms import alert\n\nclr.AddReference("System.Core")\nclr.ImportExtensions(System.Linq)\n\ndoc = HOST_APP.doc\noutput = get_output()\n\ndef validate_document_requirements():\n    """Template for document validation"""\n    # Add validation logic here\n    return True\n\n# Main execution template\nif validate_document_requirements():\n    try:\n        # Your tool logic here\n        pass\n    except Exception as e:\n        alert("Error: {}".format(str(e)), "Tool Error")\n        Debug.WriteLine("Error: {}".format(str(e)))\n'})}),"\n",(0,s.jsx)(n.h3,{id:"your-mission-1",children:"Your Mission"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create the ",(0,s.jsx)(n.code,{children:".cursor/rules/"})," directory structure"]}),"\n",(0,s.jsx)(n.li,{children:"Add the framework rules and templates above"}),"\n",(0,s.jsx)(n.li,{children:'Ask Cursor to "refactor according to DCMvn framework rules"'}),"\n",(0,s.jsx)(n.li,{children:"Observe how Cursor applies the structured rules automatically"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Modern Rule Testing",type:"tip",children:(0,s.jsxs)(n.p,{children:["Try asking Cursor to: ",(0,s.jsx)(n.em,{children:'"Create a new room analyzer tool following DCMvn framework patterns"'})]})}),"\n",(0,s.jsx)(n.h2,{id:"task-d-agent-chat-documentation",children:"Task D: Agent Chat Documentation"}),"\n",(0,s.jsx)(n.h3,{id:"your-mission---use-ctrli-agent-chat",children:"Your Mission - Use Ctrl+I Agent Chat"}),"\n",(0,s.jsx)(n.p,{children:"Take any completed function and use the Agent chat to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ask:"})," ",(0,s.jsx)(n.em,{children:'"Add comprehensive XML documentation comments"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ask:"})," ",(0,s.jsx)(n.em,{children:'"Create unit tests for this function"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ask:"})," ",(0,s.jsx)(n.em,{children:'"Add input validation and error handling"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ask:"})," ",(0,s.jsx)(n.em,{children:'"Optimize this code for performance"'})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"expected-results",children:"Expected Results"}),"\n",(0,s.jsx)(n.p,{children:"The Agent should provide:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Complete XML documentation"}),"\n",(0,s.jsx)(n.li,{children:"Basic unit test structure"}),"\n",(0,s.jsx)(n.li,{children:"Robust input validation"}),"\n",(0,s.jsx)(n.li,{children:"Performance optimization suggestions"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Advanced Agent Prompts",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Explain potential issues with this Revit API usage"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Suggest alternative approaches for better performance"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:'"Add logging and debugging capabilities"'})}),"\n"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Generates room filtering logic"}),"\n",(0,s.jsx)(n.li,{children:"Includes pandas integration for data processing"}),"\n",(0,s.jsx)(n.li,{children:"Handles unplaced rooms automatically"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DCMvn Application"}),": Used for space programming analysis in healthcare and mixed-use projects like Zentralinstitut f\xfcr Seelische Gesundheit (20,000 m\xb2)."]}),"\n",(0,s.jsx)(n.h2,{id:"mep-systems-analysis",children:"MEP Systems Analysis"}),"\n",(0,s.jsx)(n.h3,{id:"efficient-cursor-prompt",children:"Efficient Cursor Prompt"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Create a tool that analyzes HVAC systems in a Revit model, calculates airflow rates, and generates a compliance report for building codes."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Generated Capabilities"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Intelligent MEP namespace suggestions"}),"\n",(0,s.jsx)(n.li,{children:"Duct and pipe system filtering"}),"\n",(0,s.jsx)(n.li,{children:"Flow calculation algorithms"}),"\n",(0,s.jsx)(n.li,{children:"Automated report generation"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DCMvn Expertise"}),": Leverages our multidisciplinary MEP coordination experience across 95,000+ m\xb2 of projects."]}),"\n",(0,s.jsx)(n.h2,{id:"family-parameter-automation",children:"Family Parameter Automation"}),"\n",(0,s.jsx)(n.h3,{id:"efficient-cursor-prompt-1",children:"Efficient Cursor Prompt"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Develop a Revit plugin that standardizes family parameters across all families in a project, ensuring consistent naming conventions and data types according to company standards."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features Generated"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Family loading and parameter scanning"}),"\n",(0,s.jsx)(n.li,{children:"Standardization rule application"}),"\n",(0,s.jsx)(n.li,{children:"Batch parameter modification"}),"\n",(0,s.jsx)(n.li,{children:"Progress reporting and logging"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"custom-ribbon-integration",children:"Custom Ribbon Integration"}),"\n",(0,s.jsx)(n.h3,{id:"efficient-cursor-prompt-2",children:"Efficient Cursor Prompt"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Create a Revit ribbon panel with multiple commands for BIM coordination tasks including clash detection preparation, model validation, and export utilities."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cursor Suggestions"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ribbon panel creation patterns"}),"\n",(0,s.jsx)(n.li,{children:"Icon and button management"}),"\n",(0,s.jsx)(n.li,{children:"Command organization"}),"\n",(0,s.jsx)(n.li,{children:"User interface best practices"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"real-world-project-applications",children:"Real-World Project Applications"}),"\n",(0,s.jsx)(n.h3,{id:"konzerthaus-m\xfcnchen-74000-m",children:"Konzerthaus M\xfcnchen (74,000 m\xb2)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Acoustic Analysis Plugin"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Create a BIM-integrated acoustic analysis tool that evaluates room geometries, material properties, and sight lines for optimal performance hall design."'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Application"}),": Concert hall acoustic optimization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Result"}),": Automated geometry analysis with material property integration"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\xfcberseequartier-residential-419000-m",children:"\xdcberseequartier Residential (419,000 m\xb2)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Multi-Building Coordination"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Develop a tool for multi-building projects that synchronizes element naming, coordinates clash detection across buildings, and manages shared parameters."'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scale"}),": 419,000 m\xb2 residential complex"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Benefit"}),": Consistent standards across multiple building phases"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-plugin-patterns",children:"Advanced Plugin Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"model-validation-suite",children:"Model Validation Suite"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Create a comprehensive model validation plugin that checks geometry quality, parameter completeness, naming conventions, and export readiness for different file formats."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Generated Components"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Geometry validation algorithms"}),"\n",(0,s.jsx)(n.li,{children:"Parameter completeness checking"}),"\n",(0,s.jsx)(n.li,{children:"Naming convention enforcement"}),"\n",(0,s.jsx)(n.li,{children:"Multi-format export preparation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Build a plugin that monitors Revit model performance, tracks file size growth, element count changes, and provides optimization recommendations."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Real-time performance metrics"}),"\n",(0,s.jsx)(n.li,{children:"Historical data tracking"}),"\n",(0,s.jsx)(n.li,{children:"Optimization suggestions"}),"\n",(0,s.jsx)(n.li,{children:"Resource usage monitoring"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cursor-ai-best-practices",children:"Cursor AI Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"prompt-engineering-tips",children:"Prompt Engineering Tips"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Be Specific About Context"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'\u2705 "Create a Revit API tool for MEP clash detection"'}),"\n",(0,s.jsx)(n.li,{children:'\u274c "Make a clash detection tool"'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Include Technical Requirements"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'\u2705 "Export to Excel using OpenXML with custom formatting"'}),"\n",(0,s.jsx)(n.li,{children:'\u274c "Export the data"'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Specify Error Handling"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'\u2705 "Include try-catch blocks for transaction failures"'}),"\n",(0,s.jsx)(n.li,{children:'\u274c "Make it work"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dcmvn-development-standards",children:"DCMvn Development Standards"}),"\n",(0,s.jsx)(n.p,{children:"Our team follows these practices across all projects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent Naming"}),": Use DCMvn coding standards in prompts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": Request inline documentation for all generated code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Version Control"}),": Include git integration in workflow prompts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing"}),": Always request unit tests for critical functions"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"large-model-handling",children:"Large Model Handling"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Optimize the wall analyzer for large models with 10,000+ walls. Implement progress reporting, memory-efficient processing, and cancellation support."'})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cursor Optimizations"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Efficient element filtering"}),"\n",(0,s.jsx)(n.li,{children:"Batch processing strategies"}),"\n",(0,s.jsx)(n.li,{children:"Memory management patterns"}),"\n",(0,s.jsx)(n.li,{children:"User feedback mechanisms"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-issues--solutions",children:"Common Issues & Solutions"}),"\n",(0,s.jsx)(n.h3,{id:"transaction-management",children:"Transaction Management"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),': "Transaction not started" errors\n',(0,s.jsx)(n.strong,{children:"Solution Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Fix transaction handling in this Revit plugin to ensure proper start/commit patterns with error recovery"'})]}),"\n",(0,s.jsx)(n.h3,{id:"parameter-access",children:"Parameter Access"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),": Null reference exceptions\n",(0,s.jsx)(n.strong,{children:"Solution Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Add safe parameter access patterns with null checking and type validation for Revit elements"'})]}),"\n",(0,s.jsx)(n.h3,{id:"performance-bottlenecks",children:"Performance Bottlenecks"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),": Slow processing on large models\n",(0,s.jsx)(n.strong,{children:"Solution Prompt"}),": ",(0,s.jsx)(n.em,{children:'"Implement efficient element collection and processing for large Revit models with progress indication"'})]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Explore more advanced BIM development:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IFC Processing"})," - Industry Foundation Classes workflows"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Visualization"})," - BIM analytics and reporting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Project Case Studies"})," - Complete project implementations"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Plugin examples by ",(0,s.jsx)(n.a,{href:"https://dcmvn.com",children:"DCMvn CO., Ltd"})," - 98.3% digital, 100% pure"]})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);