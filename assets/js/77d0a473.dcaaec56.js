"use strict";(self.webpackChunkdcmvn_cursor_bim_docs=self.webpackChunkdcmvn_cursor_bim_docs||[]).push([[588],{164:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"features/chat-mode","title":"Chat Overview","description":"Leverage Cursor AI\'s conversational interface for complex development guidance and agentic workflows","source":"@site/docs/features/chat-mode.md","sourceDirName":"features","slug":"/features/chat-mode","permalink":"/pyDCMvnDocs/docs/features/chat-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/diggtvu/pyDCMvnDocs/tree/main/docs/features/chat-mode.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Chat Overview","slug":"chat-mode","description":"Leverage Cursor AI\'s conversational interface for complex development guidance and agentic workflows","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Agent Inline Editing","permalink":"/pyDCMvnDocs/docs/features/inline-editing"},"next":{"title":"Prompt Engineering","permalink":"/pyDCMvnDocs/docs/features/chat-mode/prompt-engineering"}}');var r=i(4848),s=i(8453);const o={title:"Chat Overview",slug:"chat-mode",description:"Leverage Cursor AI's conversational interface for complex development guidance and agentic workflows",sidebar_position:3},a="Chat Mode for Agent Guidance",l={},c=[{value:"\ud83c\udf1f What is Chat Mode?",id:"-what-is-chat-mode",level:2},{value:"\ud83d\ude80 Key Features for BIM Developers",id:"-key-features-for-bim-developers",level:2},{value:"Codebase Understanding",id:"codebase-understanding",level:3},{value:"Advanced Capabilities",id:"advanced-capabilities",level:3},{value:"\ud83d\udcac How to Use Chat Mode",id:"-how-to-use-chat-mode",level:2},{value:"Basic Chat Interface",id:"basic-chat-interface",level:3},{value:"Advanced Chat Commands",id:"advanced-chat-commands",level:3},{value:"File References",id:"file-references",level:4},{value:"Symbol References",id:"symbol-references",level:4},{value:"Context Control",id:"context-control",level:4},{value:"\ud83c\udfd7\ufe0f AEC Development Use Cases",id:"\ufe0f-aec-development-use-cases",level:2},{value:"1. Code Explanation and Learning",id:"1-code-explanation-and-learning",level:3},{value:"2. Feature Planning and Architecture",id:"2-feature-planning-and-architecture",level:3},{value:"3. Debugging and Troubleshooting",id:"3-debugging-and-troubleshooting",level:3},{value:"4. Code Generation and Refactoring",id:"4-code-generation-and-refactoring",level:3},{value:"\ud83c\udfaf Effective Prompting Strategies",id:"-effective-prompting-strategies",level:2},{value:"Be Specific and Contextual",id:"be-specific-and-contextual",level:3},{value:"Include Technical Requirements",id:"include-technical-requirements",level:3},{value:"Reference Existing Patterns",id:"reference-existing-patterns",level:3},{value:"\ud83d\udcca Advanced Chat Techniques",id:"-advanced-chat-techniques",level:2},{value:"AI Memory and Suggestions",id:"ai-memory-and-suggestions",level:3},{value:"Multi-Step Planning",id:"multi-step-planning",level:3},{value:"Iterative Development",id:"iterative-development",level:3},{value:"Code Review and Quality Assurance",id:"code-review-and-quality-assurance",level:3},{value:"\ud83d\udd27 Chat Mode Settings",id:"-chat-mode-settings",level:2},{value:"Context Management",id:"context-management",level:3},{value:"Privacy and Security",id:"privacy-and-security",level:3},{value:"\ud83d\ude80 Integration with Other Features",id:"-integration-with-other-features",level:2},{value:"Chat + Tab Completion",id:"chat--tab-completion",level:3},{value:"Chat + Inline Edit",id:"chat--inline-edit",level:3},{value:"Chat + Agent Mode",id:"chat--agent-mode",level:3},{value:"\ud83d\udcc8 Best Practices for BIM Development",id:"-best-practices-for-bim-development",level:2},{value:"Domain-Specific Queries",id:"domain-specific-queries",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Integration Guidance",id:"integration-guidance",level:3},{value:"\ud83c\udf93 Learning and Development",id:"-learning-and-development",level:2},{value:"Code Learning",id:"code-learning",level:3},{value:"Best Practices Discovery",id:"best-practices-discovery",level:3},{value:"\ud83d\udcdd Prompt Engineering for BIM Development",id:"-prompt-engineering-for-bim-development",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"chat-mode-for-agent-guidance",children:"Chat Mode for Agent Guidance"})}),"\n",(0,r.jsx)(n.p,{children:"Cursor's Chat Mode transforms your development workflow by providing an intelligent conversational interface that understands your entire codebase. This feature is particularly powerful for BIM development where complex domain knowledge and multi-file operations are common."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\ude80 ",(0,r.jsx)(n.strong,{children:"New to Cursor?"})," Start with the ",(0,r.jsx)(n.a,{href:"/pyDCMvnDocs/docs/fundamentals/introduction-to-cursor",children:"Introduction to Cursor AI"})," to understand the basic interface and concepts before diving into advanced Chat Mode features."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-what-is-chat-mode",children:"\ud83c\udf1f What is Chat Mode?"}),"\n",(0,r.jsx)(n.p,{children:"Chat Mode is Cursor's conversational AI interface that allows you to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ask questions about your entire codebase"}),"\n",(0,r.jsx)(n.li,{children:"Request complex multi-file modifications"}),"\n",(0,r.jsx)(n.li,{children:"Get explanations of existing code patterns"}),"\n",(0,r.jsx)(n.li,{children:"Plan and architect new features"}),"\n",(0,r.jsx)(n.li,{children:"Debug issues with AI assistance"}),"\n",(0,r.jsx)(n.li,{children:"Generate documentation automatically"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-key-features-for-bim-developers",children:"\ud83d\ude80 Key Features for BIM Developers"}),"\n",(0,r.jsx)(n.h3,{id:"codebase-understanding",children:"Codebase Understanding"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full Project Context"}),": AI understands your entire pyRevit extension structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-file Relationships"}),": Recognizes dependencies between modules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Domain Knowledge"}),": Understands Revit API patterns and BIM workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Historical Context"}),": Remembers previous conversations within a session"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-capabilities",children:"Advanced Capabilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-file Operations"}),": Plan and execute changes across multiple files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architectural Guidance"}),": Get advice on MVVM patterns and code organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing Strategy"}),": Generate comprehensive test suites"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Optimization"}),": Identify and fix performance bottlenecks"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-how-to-use-chat-mode",children:"\ud83d\udcac How to Use Chat Mode"}),"\n",(0,r.jsx)(n.h3,{id:"basic-chat-interface",children:"Basic Chat Interface"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open Chat Panel"}),": Click the chat icon in Cursor's sidebar"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reference Files"}),": Use ",(0,r.jsx)(n.code,{children:"@filename"})," to reference specific files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reference Symbols"}),": Use ",(0,r.jsx)(n.code,{children:"@ClassName"})," or ",(0,r.jsx)(n.code,{children:"@function_name"})," for specific code elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ask Questions"}),": Use natural language to describe what you need"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,r.jsx)(n.strong,{children:"New to Cursor?"})," Learn about the context reference system and basic interface in ",(0,r.jsx)(n.a,{href:"/pyDCMvnDocs/docs/fundamentals/introduction-to-cursor#-cursor-interface-overview",children:"Introduction to Cursor AI"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-chat-commands",children:"Advanced Chat Commands"}),"\n",(0,r.jsx)(n.h4,{id:"file-references",children:"File References"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@script.py - Reference a specific file\n@models/room_processor.py - Reference file in subdirectory\n@*.py - Reference all Python files\n"})}),"\n",(0,r.jsx)(n.h4,{id:"symbol-references",children:"Symbol References"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@RoomProcessor - Reference a specific class\n@extract_room_data - Reference a specific function\n@DB.Room - Reference external API types\n"})}),"\n",(0,r.jsx)(n.h4,{id:"context-control",children:"Context Control"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/clear - Clear conversation history\n/docs - Include documentation in context\n/web - Search web for additional context\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-aec-development-use-cases",children:"\ud83c\udfd7\ufe0f AEC Development Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"1-code-explanation-and-learning",children:"1. Code Explanation and Learning"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Query:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Can you explain how the @room_processor.py file handles Revit API transactions? \nShow me the pattern and explain why it's structured this way.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected Response:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detailed explanation of transaction patterns"}),"\n",(0,r.jsx)(n.li,{children:"Code examples with annotations"}),"\n",(0,r.jsx)(n.li,{children:"Best practices for Revit API usage"}),"\n",(0,r.jsx)(n.li,{children:"Suggestions for improvements"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-feature-planning-and-architecture",children:"2. Feature Planning and Architecture"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Query:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"I need to add Excel export functionality to my @room_analysis.py tool. \nCan you design the architecture using MVVM patterns and show me \nhow to integrate it with the existing codebase?\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected Response:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Architectural recommendations"}),"\n",(0,r.jsx)(n.li,{children:"Code structure proposals"}),"\n",(0,r.jsx)(n.li,{children:"Integration strategies"}),"\n",(0,r.jsx)(n.li,{children:"Sample implementation"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-debugging-and-troubleshooting",children:"3. Debugging and Troubleshooting"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Query:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'My @wall_analyzer.py is throwing "InvalidOperationException" when processing \nlarge models. Can you analyze the code and suggest performance improvements?\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected Response:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Code analysis and issue identification"}),"\n",(0,r.jsx)(n.li,{children:"Performance optimization suggestions"}),"\n",(0,r.jsx)(n.li,{children:"Memory management improvements"}),"\n",(0,r.jsx)(n.li,{children:"Error handling enhancements"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-code-generation-and-refactoring",children:"4. Code Generation and Refactoring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Query:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Convert my @room_data_extractor.py from procedural code to use proper \nMVVM pattern with WPF UI. Include error handling and progress reporting.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Expected Response:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Complete code refactoring"}),"\n",(0,r.jsx)(n.li,{children:"MVVM implementation"}),"\n",(0,r.jsx)(n.li,{children:"UI integration"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced error handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-effective-prompting-strategies",children:"\ud83c\udfaf Effective Prompting Strategies"}),"\n",(0,r.jsx)(n.h3,{id:"be-specific-and-contextual",children:"Be Specific and Contextual"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\u274c "Fix my code"\n\u2705 "Optimize the @element_collector.py to handle 10,000+ elements efficiently \n    while maintaining the existing FilteredElementCollector pattern"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"include-technical-requirements",children:"Include Technical Requirements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\u274c "Add database support"\n\u2705 "Add SQLite integration to @room_processor.py that stores room data with \n    proper indexing for area and level queries, following our existing \n    error handling patterns"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"reference-existing-patterns",children:"Reference Existing Patterns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\u274c "Create a new tool"\n\u2705 "Create a new pyRevit tool similar to @existing_tool.py but for processing \n    MEP elements, following the same transaction handling and output patterns"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-advanced-chat-techniques",children:"\ud83d\udcca Advanced Chat Techniques"}),"\n",(0,r.jsx)(n.h3,{id:"ai-memory-and-suggestions",children:"AI Memory and Suggestions"}),"\n",(0,r.jsx)(n.p,{children:"Cursor provides intelligent memory suggestions to help maintain context and improve your workflow:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Memory Suggest",src:i(2716).A+"",width:"514",height:"300"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Cursor's memory feature suggests relevant context and previous conversations to enhance current discussions"})}),"\n",(0,r.jsx)(n.h3,{id:"multi-step-planning",children:"Multi-Step Planning"}),"\n",(0,r.jsx)(n.p,{children:"Break complex requests into phases:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Phase 1: Can you analyze my current @pyrevit_extension structure and \nidentify areas for improvement?\n\nPhase 2: Based on your analysis, create a refactoring plan that maintains \nbackward compatibility while improving performance.\n\nPhase 3: Implement the first improvement focusing on the @utils module.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"iterative-development",children:"Iterative Development"}),"\n",(0,r.jsx)(n.p,{children:"Build features incrementally:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Preview Changed Multiple Files",src:i(1624).A+"",width:"3440",height:"1392"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Preview interface showing how Cursor manages changes across multiple files during iterative development"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Step 1: Create a basic room data structure that matches Revit's Room element\n\nStep 2: Add validation methods to ensure data integrity\n\nStep 3: Include Excel export functionality with proper formatting\n\nStep 4: Add error handling for common Revit API exceptions\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-review-and-quality-assurance",children:"Code Review and Quality Assurance"}),"\n",(0,r.jsx)(n.p,{children:"Use chat for comprehensive reviews:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Review Cursor Changed",src:i(9095).A+"",width:"3439",height:"1392"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Review interface showing how Cursor tracks and presents code changes for quality assurance"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Please review @my_new_feature.py for:\n1. Adherence to our coding standards in @.cursor/rules/\n2. Proper Revit API usage patterns\n3. Performance implications for large models\n4. Security considerations for file operations\n5. Test coverage recommendations\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-chat-mode-settings",children:"\ud83d\udd27 Chat Mode Settings"}),"\n",(0,r.jsx)(n.h3,{id:"context-management",children:"Context Management"}),"\n",(0,r.jsx)(n.p,{children:"Cursor automatically manages context for Chat Mode through its indexing and rules system. You can control what information is available to Chat Mode through:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Codebase Indexing"}),": Configured in ",(0,r.jsx)(n.code,{children:"Cursor Settings > Features > Codebase Indexing"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rules for AI"}),": Set project-specific rules in ",(0,r.jsx)(n.code,{children:".cursor/rules/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ignore Files"}),": Use ",(0,r.jsx)(n.code,{children:".cursorignore"})," to exclude sensitive files from indexing"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"privacy-and-security",children:"Privacy and Security"}),"\n",(0,r.jsx)(n.p,{children:"Control what Chat Mode can access:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:".cursorignore"})," file to exclude sensitive files and directories"]}),"\n",(0,r.jsx)(n.li,{children:"Configure indexing settings to limit what gets processed"}),"\n",(0,r.jsx)(n.li,{children:"Review file patterns to ensure proprietary data remains private"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For detailed configuration options, refer to the ",(0,r.jsx)(n.a,{href:"https://docs.cursor.com/en/context/rules",children:"official Cursor documentation"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-integration-with-other-features",children:"\ud83d\ude80 Integration with Other Features"}),"\n",(0,r.jsx)(n.h3,{id:"chat--tab-completion",children:"Chat + Tab Completion"}),"\n",(0,r.jsx)(n.p,{children:"Use chat to understand context, then apply with Tab:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Ask chat about patterns"}),"\n",(0,r.jsx)(n.li,{children:"Learn the approach"}),"\n",(0,r.jsx)(n.li,{children:"Use Tab completion to implement"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"chat--inline-edit",children:"Chat + Inline Edit"}),"\n",(0,r.jsx)(n.p,{children:"Combine for powerful editing:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Plan changes in chat"}),"\n",(0,r.jsx)(n.li,{children:"Select specific code sections"}),"\n",(0,r.jsx)(n.li,{children:"Use inline edit with chat guidance"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"chat--agent-mode",children:"Chat + Agent Mode"}),"\n",(0,r.jsx)(n.p,{children:"Escalate complex tasks:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Discuss approach in chat"}),"\n",(0,r.jsx)(n.li,{children:"Delegate implementation to Agent Mode"}),"\n",(0,r.jsx)(n.li,{children:"Review and refine results"}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{title:"Always Use Version Control with AI Agents",type:"warning",children:[(0,r.jsxs)(n.p,{children:["When working with AI agents that can make extensive code changes, ",(0,r.jsx)(n.strong,{children:"always use Git for version control"})," to track all modifications and maintain code history."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Always Use Git To Control Version",src:i(1747).A+"",width:"3440",height:"1392"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Best practice: Always commit your work before starting AI agent sessions to ensure you can track and revert changes if needed"})})]}),"\n",(0,r.jsx)(n.h2,{id:"-best-practices-for-bim-development",children:"\ud83d\udcc8 Best Practices for BIM Development"}),"\n",(0,r.jsx)(n.h3,{id:"domain-specific-queries",children:"Domain-Specific Queries"}),"\n",(0,r.jsx)(n.p,{children:"Leverage BIM knowledge:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"How should I handle coordinate system transformations between linked models \nin my @coordination_tool.py?"\n\n"What\'s the best approach for batch processing family parameters while \nmaintaining transaction performance?"\n\n"How can I optimize my IFC export workflow to handle large architectural models?"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.p,{children:"Get specific performance advice:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Analyze @large_model_processor.py for memory leaks and suggest improvements \nfor processing 50,000+ elements"\n\n"How can I implement parallel processing for @room_analysis.py while \nrespecting Revit API thread restrictions?"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"integration-guidance",children:"Integration Guidance"}),"\n",(0,r.jsx)(n.p,{children:"Ask about connecting systems:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"How should I integrate @revit_exporter.py with our existing database \nschema while maintaining data consistency?"\n\n"What\'s the best pattern for connecting my pyRevit tools with external \nweb APIs for cloud data synchronization?"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-learning-and-development",children:"\ud83c\udf93 Learning and Development"}),"\n",(0,r.jsx)(n.h3,{id:"code-learning",children:"Code Learning"}),"\n",(0,r.jsx)(n.p,{children:"Use chat as a learning tool:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Explain the design patterns used in @advanced_tool.py and why they\'re \neffective for BIM applications"\n\n"What are the key differences between how @tool_v1.py and @tool_v2.py \nhandle error scenarios?"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"best-practices-discovery",children:"Best Practices Discovery"}),"\n",(0,r.jsx)(n.p,{children:"Learn from your codebase:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Analyze all my pyRevit tools and identify common patterns that could \nbe extracted into a shared utility library"\n\n"What coding standards are consistently followed across my project, \nand where are there inconsistencies?"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-prompt-engineering-for-bim-development",children:"\ud83d\udcdd Prompt Engineering for BIM Development"}),"\n",(0,r.jsx)(n.p,{children:"For advanced prompt engineering techniques specifically tailored to BIM development, see:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/pyDCMvnDocs/docs/features/chat-mode/prompt-engineering",children:"Prompt Engineering Guide"})," - Comprehensive strategies for effective AI communication"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Chat Mode is your AI pair programming partner, ready to help with everything from quick questions to complex architectural decisions. Master this feature to unlock the full potential of AI-assisted BIM development."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1624:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/PreviewChangedMultipleFiles-bd456b81d8050a228c7cc45989db7abe.png"},1747:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/AlwaysUseGitToControlVersion-1d1b2dbe71d95ab6730a59ec25ca9c8f.png"},2716:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/MemorySuggest-634d6067b0f6a032c57a0383d976c4b5.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},9095:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/ReviewCursorChanged-85931737eb8b9295ce8688469a6d18d3.png"}}]);